From: Jud
Date: Mon, 12 Aug 2013 16:57:56 -0400
Subject: [PATCH] Adding patchwork

---
 setuptools/command/install.py         |  2 ++
 setuptools/command/install_scripts.py | 10 ++++++++++
 2 files changed, 12 insertions(+)

diff --git a/setuptools/command/install.py b/setuptools/command/install.py
index 247c4f2..e90e840 100644
--- a/setuptools/command/install.py
+++ b/setuptools/command/install.py
@@ -6,6 +6,7 @@ class install(_install):
     """Use easy_install to install the package, w/dependencies"""
 
     user_options = _install.user_options + [
+        ('executable=', 'e', "specify final destination interpreter path"),
         ('old-and-unmanageable', None, "Try not to use this!"),
         ('single-version-externally-managed', None,
             "used by system package builders to create 'flat' eggs"),
@@ -21,6 +22,7 @@ class install(_install):
 
     def initialize_options(self):
         _install.initialize_options(self)
+        self.executable = None
         self.old_and_unmanageable = None
         self.single_version_externally_managed = None
         self.no_compile = None  # make DISTUTILS_DEBUG work right!
diff --git a/setuptools/command/install_scripts.py b/setuptools/command/install_scripts.py
index 105dabc..a9641bb 100755
--- a/setuptools/command/install_scripts.py
+++ b/setuptools/command/install_scripts.py
@@ -10,6 +10,14 @@ class install_scripts(_install_scripts):
     def initialize_options(self):
         _install_scripts.initialize_options(self)
         self.no_ep = False
+        self.executable = None
+
+    def finalize_options(self):
+        _install_scripts.finalize_options(self)
+        self.set_undefined_options('install',
+            ('executable','executable')
+        )
+
 
     def run(self):
         from setuptools.command.easy_install import get_script_args
@@ -31,6 +39,8 @@ class install_scripts(_install_scripts):
         )
         bs_cmd = self.get_finalized_command('build_scripts')
         executable = getattr(bs_cmd,'executable',sys_executable)
+        if self.executable is not None:
+            executable = self.executable
         is_wininst = getattr(
             self.get_finalized_command("bdist_wininst"), '_is_running', False
         )
-- 
1.8.1.1
